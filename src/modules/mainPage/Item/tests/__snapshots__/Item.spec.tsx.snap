// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item with full filled props 1`] = `
<ToastProvider
  autoDismiss={false}
  autoDismissTimeout={5000}
  components={
    Object {
      "Toast": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "onDismiss": [Function],
        },
        "render": [Function],
      },
      "ToastContainer": [Function],
    }
  }
  placement="top-right"
  transitionDuration={220}
>
  <Memo()
    id="1"
    name="item1Name"
    venue="item1Venue"
    website="item1Website"
  >
    <styled.div
      onClick={[Function]}
    >
      <div
        className="sc-bdvvaa epensX"
        onClick={[Function]}
      >
        <Styled(styled.div)>
          <div
            className="sc-gsDJrp sc-dkPtyc  hpPxdP"
          >
            item1Name
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="sc-gsDJrp"
          >
            <styled.span>
              <span
                className="sc-eCImvq cWlXWB"
              >
                stadium
              </span>
            </styled.span>
             
            item1Venue
          </div>
        </styled.div>
        <styled.div>
          <div
            className="sc-gsDJrp"
          >
            <styled.span>
              <span
                className="sc-eCImvq cWlXWB"
              >
                website
              </span>
            </styled.span>
             
            <styled.a
              href="item1Website"
            >
              <a
                className="sc-hKwCoD gQFhIe"
                href="item1Website"
              >
                item1Website
              </a>
            </styled.a>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </Memo()>
  <Portal
    containerInfo={
      <body>
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
      </body>
    }
  >
    <ToastContainer
      hasToasts={false}
      placement="top-right"
    >
      <EmotionCssPropInternal
        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastContainer"
        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
        className="react-toast-notifications__container"
        css={
          Object {
            "boxSizing": "border-box",
            "maxHeight": "100%",
            "overflow": "hidden",
            "padding": 8,
            "pointerEvents": "none",
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <div
          className="react-toast-notifications__container css-9bcnsi-ToastContainer"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
          />
        </div>
      </EmotionCssPropInternal>
    </ToastContainer>
  </Portal>
</ToastProvider>
`;

exports[`Item with only required props 1`] = `
<ToastProvider
  autoDismiss={false}
  autoDismissTimeout={5000}
  components={
    Object {
      "Toast": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "onDismiss": [Function],
        },
        "render": [Function],
      },
      "ToastContainer": [Function],
    }
  }
  placement="top-right"
  transitionDuration={220}
>
  <Memo()
    id="1"
    name="item1Name"
  >
    <styled.div
      onClick={[Function]}
    >
      <div
        className="sc-bdvvaa epensX"
        onClick={[Function]}
      >
        <Styled(styled.div)>
          <div
            className="sc-gsDJrp sc-dkPtyc  hpPxdP"
          >
            item1Name
          </div>
        </Styled(styled.div)>
      </div>
    </styled.div>
  </Memo()>
  <Portal
    containerInfo={
      <body>
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
      </body>
    }
  >
    <ToastContainer
      hasToasts={false}
      placement="top-right"
    >
      <EmotionCssPropInternal
        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastContainer"
        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
        className="react-toast-notifications__container"
        css={
          Object {
            "boxSizing": "border-box",
            "maxHeight": "100%",
            "overflow": "hidden",
            "padding": 8,
            "pointerEvents": "none",
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <div
          className="react-toast-notifications__container css-9bcnsi-ToastContainer"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
          />
        </div>
      </EmotionCssPropInternal>
    </ToastContainer>
  </Portal>
</ToastProvider>
`;
