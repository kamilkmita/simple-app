// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item with click on Item 1`] = `
<ToastProvider
  autoDismiss={false}
  autoDismissTimeout={5000}
  components={
    Object {
      "Toast": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "onDismiss": [Function],
        },
        "render": [Function],
      },
      "ToastContainer": [Function],
    }
  }
  placement="top-right"
  transitionDuration={220}
>
  <Memo()
    id="1"
    name="item1Name"
    venue="item1Venue"
    website="item1Website"
  >
    <styled.div
      onClick={[Function]}
    >
      <div
        className="sc-bdvvaa epensX"
        onClick={[Function]}
      >
        <Styled(styled.div)>
          <div
            className="sc-gsDJrp sc-dkPtyc  hpPxdP"
          >
            item1Name
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="sc-gsDJrp"
          >
            <styled.span>
              <span
                className="sc-eCImvq cWlXWB"
              >
                stadium
              </span>
            </styled.span>
             
            item1Venue
          </div>
        </styled.div>
        <styled.div>
          <div
            className="sc-gsDJrp"
          >
            <styled.span>
              <span
                className="sc-eCImvq cWlXWB"
              >
                website
              </span>
            </styled.span>
             
            <styled.a
              href="item1Website"
            >
              <a
                className="sc-hKwCoD gQFhIe"
                href="item1Website"
              >
                item1Website
              </a>
            </styled.a>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </Memo()>
  <Portal
    containerInfo={
      <body>
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
        <div
          class="react-toast-notifications__container css-nuw05d-ToastContainer"
        >
          <div
            class="css-h0gpo1-ToastElement"
            style="height: auto;"
          >
            <div
              class="react-toast-notifications__toast react-toast-notifications__toast--info css-f36oh3-ToastElement"
            >
              <div
                class="react-toast-notifications__toast__icon-wrapper css-1rjh2i2-Icon"
              >
                <div
                  class="react-toast-notifications__toast__countdown css-bj1hmp-Countdown"
                />
                <svg
                  aria-hidden="true"
                  class="react-toast-notifications__toast__icon css-80a6v4-Icon"
                  height="16"
                  style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                  viewBox="0 0 14 16"
                  width="14"
                >
                  <path
                    d="M6.3 5.71a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 8.01c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V8v.01zM7 2.32C3.86 2.32 1.3 4.86 1.3 8c0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                    fill-rule="evenodd"
                  />
                </svg>
              </div>
              <div
                class="react-toast-notifications__toast__content css-18gu508-Content"
              >
                For more information, please click on website
              </div>
              <div
                class="react-toast-notifications__toast__dismiss-button css-1klfh0r-Button"
                role="button"
              >
                <svg
                  aria-hidden="true"
                  class="react-toast-notifications__toast__dismiss-icon"
                  height="16"
                  style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                  viewBox="0 0 14 16"
                  width="14"
                >
                  <path
                    d="M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
                    fill-rule="evenodd"
                  />
                </svg>
                <span
                  class="react-toast-notifications__toast__dismiss-text css-1uvvha"
                >
                  Close
                </span>
              </div>
            </div>
          </div>
        </div>
      </body>
    }
  >
    <ToastContainer
      hasToasts={true}
      placement="top-right"
    >
      <EmotionCssPropInternal
        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastContainer"
        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
        className="react-toast-notifications__container"
        css={
          Object {
            "boxSizing": "border-box",
            "maxHeight": "100%",
            "overflow": "hidden",
            "padding": 8,
            "pointerEvents": null,
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <div
          className="react-toast-notifications__container css-nuw05d-ToastContainer"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
          >
            <Transition
              appear={true}
              enter={true}
              exit={true}
              in={true}
              key=".$cvr8e7"
              mountOnEnter={true}
              nodeRef={
                Object {
                  "current": <div
                    class="css-h0gpo1-ToastElement"
                    style="height: auto;"
                  >
                    <div
                      class="react-toast-notifications__toast react-toast-notifications__toast--info css-f36oh3-ToastElement"
                    >
                      <div
                        class="react-toast-notifications__toast__icon-wrapper css-1rjh2i2-Icon"
                      >
                        <div
                          class="react-toast-notifications__toast__countdown css-bj1hmp-Countdown"
                        />
                        <svg
                          aria-hidden="true"
                          class="react-toast-notifications__toast__icon css-80a6v4-Icon"
                          height="16"
                          style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                          viewBox="0 0 14 16"
                          width="14"
                        >
                          <path
                            d="M6.3 5.71a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 8.01c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V8v.01zM7 2.32C3.86 2.32 1.3 4.86 1.3 8c0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                            fill-rule="evenodd"
                          />
                        </svg>
                      </div>
                      <div
                        class="react-toast-notifications__toast__content css-18gu508-Content"
                      >
                        For more information, please click on website
                      </div>
                      <div
                        class="react-toast-notifications__toast__dismiss-button css-1klfh0r-Button"
                        role="button"
                      >
                        <svg
                          aria-hidden="true"
                          class="react-toast-notifications__toast__dismiss-icon"
                          height="16"
                          style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                          viewBox="0 0 14 16"
                          width="14"
                        >
                          <path
                            d="M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
                            fill-rule="evenodd"
                          />
                        </svg>
                        <span
                          class="react-toast-notifications__toast__dismiss-text css-1uvvha"
                        >
                          Close
                        </span>
                      </div>
                    </div>
                  </div>,
                }
              }
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={220}
              unmountOnExit={true}
            >
              <ToastController
                appearance="info"
                autoDismiss={false}
                autoDismissTimeout={5000}
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "onDismiss": [Function],
                    },
                    "render": [Function],
                  }
                }
                forwardedRef={
                  Object {
                    "current": <div
                      class="css-h0gpo1-ToastElement"
                      style="height: auto;"
                    >
                      <div
                        class="react-toast-notifications__toast react-toast-notifications__toast--info css-f36oh3-ToastElement"
                      >
                        <div
                          class="react-toast-notifications__toast__icon-wrapper css-1rjh2i2-Icon"
                        >
                          <div
                            class="react-toast-notifications__toast__countdown css-bj1hmp-Countdown"
                          />
                          <svg
                            aria-hidden="true"
                            class="react-toast-notifications__toast__icon css-80a6v4-Icon"
                            height="16"
                            style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                            viewBox="0 0 14 16"
                            width="14"
                          >
                            <path
                              d="M6.3 5.71a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 8.01c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V8v.01zM7 2.32C3.86 2.32 1.3 4.86 1.3 8c0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                              fill-rule="evenodd"
                            />
                          </svg>
                        </div>
                        <div
                          class="react-toast-notifications__toast__content css-18gu508-Content"
                        >
                          For more information, please click on website
                        </div>
                        <div
                          class="react-toast-notifications__toast__dismiss-button css-1klfh0r-Button"
                          role="button"
                        >
                          <svg
                            aria-hidden="true"
                            class="react-toast-notifications__toast__dismiss-icon"
                            height="16"
                            style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                            viewBox="0 0 14 16"
                            width="14"
                          >
                            <path
                              d="M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
                              fill-rule="evenodd"
                            />
                          </svg>
                          <span
                            class="react-toast-notifications__toast__dismiss-text css-1uvvha"
                          >
                            Close
                          </span>
                        </div>
                      </div>
                    </div>,
                  }
                }
                key="cvr8e7"
                onDismiss={[Function]}
                placement="top-right"
                transitionDuration={220}
                transitionState="entering"
              >
                <ForwardRef
                  appearance="info"
                  autoDismiss={false}
                  autoDismissTimeout={5000}
                  isRunning={false}
                  onDismiss={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  placement="top-right"
                  transitionDuration={220}
                  transitionState="entering"
                >
                  <ToastElement
                    appearance="info"
                    forwardedRef={
                      Object {
                        "current": <div
                          class="css-h0gpo1-ToastElement"
                          style="height: auto;"
                        >
                          <div
                            class="react-toast-notifications__toast react-toast-notifications__toast--info css-f36oh3-ToastElement"
                          >
                            <div
                              class="react-toast-notifications__toast__icon-wrapper css-1rjh2i2-Icon"
                            >
                              <div
                                class="react-toast-notifications__toast__countdown css-bj1hmp-Countdown"
                              />
                              <svg
                                aria-hidden="true"
                                class="react-toast-notifications__toast__icon css-80a6v4-Icon"
                                height="16"
                                style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                                viewBox="0 0 14 16"
                                width="14"
                              >
                                <path
                                  d="M6.3 5.71a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 8.01c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V8v.01zM7 2.32C3.86 2.32 1.3 4.86 1.3 8c0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                                  fill-rule="evenodd"
                                />
                              </svg>
                            </div>
                            <div
                              class="react-toast-notifications__toast__content css-18gu508-Content"
                            >
                              For more information, please click on website
                            </div>
                            <div
                              class="react-toast-notifications__toast__dismiss-button css-1klfh0r-Button"
                              role="button"
                            >
                              <svg
                                aria-hidden="true"
                                class="react-toast-notifications__toast__dismiss-icon"
                                height="16"
                                style="display: inline-block; vertical-align: text-top; fill: currentColor;"
                                viewBox="0 0 14 16"
                                width="14"
                              >
                                <path
                                  d="M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
                                  fill-rule="evenodd"
                                />
                              </svg>
                              <span
                                class="react-toast-notifications__toast__dismiss-text css-1uvvha"
                              >
                                Close
                              </span>
                            </div>
                          </div>
                        </div>,
                      }
                    }
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    placement="top-right"
                    transitionDuration={220}
                    transitionState="entering"
                  >
                    <EmotionCssPropInternal
                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastElement"
                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                      css={
                        Object {
                          "transition": "height 120ms 100ms",
                        }
                      }
                      style={
                        Object {
                          "height": "auto",
                        }
                      }
                    >
                      <div
                        className="css-h0gpo1-ToastElement"
                        style={
                          Object {
                            "height": "auto",
                          }
                        }
                      >
                        <EmotionCssPropInternal
                          __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastElement"
                          __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                          className="react-toast-notifications__toast react-toast-notifications__toast--info"
                          css={
                            Object {
                              "backgroundColor": "white",
                              "borderRadius": 4,
                              "boxShadow": "0 3px 8px rgba(0, 0, 0, 0.175)",
                              "color": "#505F79",
                              "display": "flex",
                              "marginBottom": 8,
                              "transform": "translate3d(120%, 0, 0)",
                              "transition": "transform 220ms cubic-bezier(0.2, 0, 0, 1), opacity 220ms",
                              "width": 360,
                            }
                          }
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          <div
                            className="react-toast-notifications__toast react-toast-notifications__toast--info css-f36oh3-ToastElement"
                            onMouseEnter={[Function]}
                            onMouseLeave={[Function]}
                          >
                            <Icon
                              appearance="info"
                              autoDismiss={false}
                              autoDismissTimeout={5000}
                              isRunning={false}
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Icon"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="react-toast-notifications__toast__icon-wrapper"
                                css={
                                  Object {
                                    "backgroundColor": "#2684FF",
                                    "borderBottomLeftRadius": 4,
                                    "borderTopLeftRadius": 4,
                                    "color": "white",
                                    "flexShrink": 0,
                                    "overflow": "hidden",
                                    "paddingBottom": 8,
                                    "paddingTop": 8,
                                    "position": "relative",
                                    "textAlign": "center",
                                    "width": 30,
                                  }
                                }
                              >
                                <div
                                  className="react-toast-notifications__toast__icon-wrapper css-1rjh2i2-Icon"
                                >
                                  <Countdown
                                    autoDismissTimeout={5000}
                                    isRunning={false}
                                    opacity={0}
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Countdown"
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                      className="react-toast-notifications__toast__countdown"
                                      css={
                                        Object {
                                          "animation": "_EMO_animation-lvbud6_@keyframes animation-lvbud6{from { height: 100%; } to { height: 0% }}_EMO_ 5000ms linear",
                                          "animationPlayState": "paused",
                                          "backgroundColor": "rgba(0,0,0,0.1)",
                                          "bottom": 0,
                                          "height": 0,
                                          "left": 0,
                                          "opacity": 0,
                                          "position": "absolute",
                                          "width": "100%",
                                        }
                                      }
                                    >
                                      <div
                                        className="react-toast-notifications__toast__countdown css-bj1hmp-Countdown"
                                      />
                                    </EmotionCssPropInternal>
                                  </Countdown>
                                  <EmotionCssPropInternal
                                    __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Icon"
                                    __EMOTION_TYPE_PLEASE_DO_NOT_USE__={[Function]}
                                    className="react-toast-notifications__toast__icon"
                                    css={
                                      Object {
                                        "position": "relative",
                                        "zIndex": 1,
                                      }
                                    }
                                  >
                                    <InfoIcon
                                      className="react-toast-notifications__toast__icon css-80a6v4-Icon"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="react-toast-notifications__toast__icon css-80a6v4-Icon"
                                        height={16}
                                        style={
                                          Object {
                                            "display": "inline-block",
                                            "fill": "currentColor",
                                            "verticalAlign": "text-top",
                                          }
                                        }
                                        viewBox="0 0 14 16"
                                        width={14}
                                      >
                                        <path
                                          d="M6.3 5.71a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 8.01c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V8v.01zM7 2.32C3.86 2.32 1.3 4.86 1.3 8c0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 1c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                                          fillRule="evenodd"
                                        />
                                      </svg>
                                    </InfoIcon>
                                  </EmotionCssPropInternal>
                                </div>
                              </EmotionCssPropInternal>
                            </Icon>
                            <Content>
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Content"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="react-toast-notifications__toast__content"
                                css={
                                  Object {
                                    "flexGrow": 1,
                                    "fontSize": 14,
                                    "lineHeight": 1.4,
                                    "minHeight": 40,
                                    "padding": "8px 12px",
                                  }
                                }
                              >
                                <div
                                  className="react-toast-notifications__toast__content css-18gu508-Content"
                                >
                                  For more information, please click on website
                                </div>
                              </EmotionCssPropInternal>
                            </Content>
                            <Button
                              onClick={[Function]}
                            >
                              <EmotionCssPropInternal
                                __EMOTION_LABEL_PLEASE_DO_NOT_USE__="Button"
                                __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
                                className="react-toast-notifications__toast__dismiss-button"
                                css={
                                  Object {
                                    ":hover": Object {
                                      "opacity": 1,
                                    },
                                    "cursor": "pointer",
                                    "flexShrink": 0,
                                    "opacity": 0.5,
                                    "padding": "8px 12px",
                                    "transition": "opacity 150ms",
                                  }
                                }
                                onClick={[Function]}
                                role="button"
                              >
                                <div
                                  className="react-toast-notifications__toast__dismiss-button css-1klfh0r-Button"
                                  onClick={[Function]}
                                  role="button"
                                >
                                  <CloseIcon
                                    className="react-toast-notifications__toast__dismiss-icon"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="react-toast-notifications__toast__dismiss-icon"
                                      height={16}
                                      style={
                                        Object {
                                          "display": "inline-block",
                                          "fill": "currentColor",
                                          "verticalAlign": "text-top",
                                        }
                                      }
                                      viewBox="0 0 14 16"
                                      width={14}
                                    >
                                      <path
                                        d="M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
                                        fillRule="evenodd"
                                      />
                                    </svg>
                                  </CloseIcon>
                                  <A11yText
                                    className="react-toast-notifications__toast__dismiss-text"
                                    tag="span"
                                  >
                                    <EmotionCssPropInternal
                                      __EMOTION_TYPE_PLEASE_DO_NOT_USE__="span"
                                      className="react-toast-notifications__toast__dismiss-text"
                                      css={
                                        Object {
                                          "border": 0,
                                          "clip": "rect(1px, 1px, 1px, 1px)",
                                          "height": 1,
                                          "overflow": "hidden",
                                          "padding": 0,
                                          "position": "absolute",
                                          "whiteSpace": "nowrap",
                                          "width": 1,
                                        }
                                      }
                                    >
                                      <span
                                        className="react-toast-notifications__toast__dismiss-text css-1uvvha"
                                      >
                                        Close
                                      </span>
                                    </EmotionCssPropInternal>
                                  </A11yText>
                                </div>
                              </EmotionCssPropInternal>
                            </Button>
                          </div>
                        </EmotionCssPropInternal>
                      </div>
                    </EmotionCssPropInternal>
                  </ToastElement>
                </ForwardRef>
              </ToastController>
            </Transition>
          </TransitionGroup>
        </div>
      </EmotionCssPropInternal>
    </ToastContainer>
  </Portal>
</ToastProvider>
`;

exports[`Item with full filled props 1`] = `
<ToastProvider
  autoDismiss={false}
  autoDismissTimeout={5000}
  components={
    Object {
      "Toast": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "onDismiss": [Function],
        },
        "render": [Function],
      },
      "ToastContainer": [Function],
    }
  }
  placement="top-right"
  transitionDuration={220}
>
  <Memo()
    id="1"
    name="item1Name"
    venue="item1Venue"
    website="item1Website"
  >
    <styled.div
      onClick={[Function]}
    >
      <div
        className="sc-bdvvaa epensX"
        onClick={[Function]}
      >
        <Styled(styled.div)>
          <div
            className="sc-gsDJrp sc-dkPtyc  hpPxdP"
          >
            item1Name
          </div>
        </Styled(styled.div)>
        <styled.div>
          <div
            className="sc-gsDJrp"
          >
            <styled.span>
              <span
                className="sc-eCImvq cWlXWB"
              >
                stadium
              </span>
            </styled.span>
             
            item1Venue
          </div>
        </styled.div>
        <styled.div>
          <div
            className="sc-gsDJrp"
          >
            <styled.span>
              <span
                className="sc-eCImvq cWlXWB"
              >
                website
              </span>
            </styled.span>
             
            <styled.a
              href="item1Website"
            >
              <a
                className="sc-hKwCoD gQFhIe"
                href="item1Website"
              >
                item1Website
              </a>
            </styled.a>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </Memo()>
  <Portal
    containerInfo={
      <body>
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
      </body>
    }
  >
    <ToastContainer
      hasToasts={false}
      placement="top-right"
    >
      <EmotionCssPropInternal
        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastContainer"
        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
        className="react-toast-notifications__container"
        css={
          Object {
            "boxSizing": "border-box",
            "maxHeight": "100%",
            "overflow": "hidden",
            "padding": 8,
            "pointerEvents": "none",
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <div
          className="react-toast-notifications__container css-9bcnsi-ToastContainer"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
          />
        </div>
      </EmotionCssPropInternal>
    </ToastContainer>
  </Portal>
</ToastProvider>
`;

exports[`Item with only required props 1`] = `
<ToastProvider
  autoDismiss={false}
  autoDismissTimeout={5000}
  components={
    Object {
      "Toast": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "onDismiss": [Function],
        },
        "render": [Function],
      },
      "ToastContainer": [Function],
    }
  }
  placement="top-right"
  transitionDuration={220}
>
  <Memo()
    id="1"
    name="item1Name"
  >
    <styled.div
      onClick={[Function]}
    >
      <div
        className="sc-bdvvaa epensX"
        onClick={[Function]}
      >
        <Styled(styled.div)>
          <div
            className="sc-gsDJrp sc-dkPtyc  hpPxdP"
          >
            item1Name
          </div>
        </Styled(styled.div)>
      </div>
    </styled.div>
  </Memo()>
  <Portal
    containerInfo={
      <body>
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
        <div
          class="react-toast-notifications__container css-9bcnsi-ToastContainer"
        />
      </body>
    }
  >
    <ToastContainer
      hasToasts={false}
      placement="top-right"
    >
      <EmotionCssPropInternal
        __EMOTION_LABEL_PLEASE_DO_NOT_USE__="ToastContainer"
        __EMOTION_TYPE_PLEASE_DO_NOT_USE__="div"
        className="react-toast-notifications__container"
        css={
          Object {
            "boxSizing": "border-box",
            "maxHeight": "100%",
            "overflow": "hidden",
            "padding": 8,
            "pointerEvents": "none",
            "position": "fixed",
            "right": 0,
            "top": 0,
            "zIndex": 1000,
          }
        }
      >
        <div
          className="react-toast-notifications__container css-9bcnsi-ToastContainer"
        >
          <TransitionGroup
            childFactory={[Function]}
            component={null}
          />
        </div>
      </EmotionCssPropInternal>
    </ToastContainer>
  </Portal>
</ToastProvider>
`;
